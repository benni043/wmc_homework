{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StarWarsServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"https://swapi.dev/api/films\";\n    this.films = [];\n    this.actors = [];\n  }\n  allFilm() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  getActor(actorURL) {\n    return this.httpClient.get(actorURL);\n  }\n}\nStarWarsServiceService.ɵfac = function StarWarsServiceService_Factory(t) {\n  return new (t || StarWarsServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nStarWarsServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StarWarsServiceService,\n  factory: StarWarsServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,YAAO,GAAW,6BAA6B;IAC/C,UAAK,GAAW,EAAE;IAMlB,WAAM,GAAY,EAAE;EAT0B;EAK9CC,OAAO;IACL,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAoB,IAAI,CAACC,OAAO,CAAC;EAC7D;EAIAC,QAAQ,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAQG,QAAQ,CAAC;EAC7C;;AAfWP,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAQ,SAAtBR,sBAAsB;EAAAS,YAFrB;AAAM","names":["StarWarsServiceService","constructor","httpClient","allFilm","get","baseUrl","getActor","actorURL","factory","providedIn"],"sourceRoot":"","sources":["D:\\Programmieren\\Schule\\WMC\\wmc_homework\\e16\\src\\app\\star-wars-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Actor, Film} from \"./film\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StarWarsServiceService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  baseUrl: string = \"https://swapi.dev/api/films\";\n  films: Film[] = [];\n\n  allFilm(): Observable<{results: Film[]}> {\n    return this.httpClient.get<{results: Film[]}>(this.baseUrl);\n  }\n\n  actors: Actor[] = [];\n\n  getActor(actorURL: string): Observable<Actor> {\n    return this.httpClient.get<Actor>(actorURL);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}