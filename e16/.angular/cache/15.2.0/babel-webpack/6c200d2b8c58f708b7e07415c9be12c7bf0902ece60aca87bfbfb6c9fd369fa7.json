{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StarWarsServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"https://swapi.dev/api/films\";\n    this.films = [];\n    this.actors = [];\n  }\n  allFilm() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  getFilmByEpisode(episode) {\n    for (let film of this.films) {\n      if (film.episode_id === episode) return film;\n    }\n    throw new Error();\n  }\n  getActor(actorURL) {\n    return this.httpClient.get(actorURL);\n  }\n}\nStarWarsServiceService.ɵfac = function StarWarsServiceService_Factory(t) {\n  return new (t || StarWarsServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nStarWarsServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StarWarsServiceService,\n  factory: StarWarsServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,YAAO,GAAW,6BAA6B;IAC/C,UAAK,GAAW,EAAE;IAclB,WAAM,GAAY,EAAE;EAjB0B;EAK9CC,OAAO;IACL,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAoB,IAAI,CAACC,OAAO,CAAC;EAC7D;EAEAC,gBAAgB,CAACC,OAAe;IAC9B,KAAK,IAAIC,IAAI,IAAI,IAAI,CAACC,KAAK,EAAE;MAC3B,IAAGD,IAAI,CAACE,UAAU,KAAKH,OAAO,EAAE,OAAOC,IAAI;;IAG7C,MAAM,IAAIG,KAAK,EAAE;EACnB;EAGAC,QAAQ,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACX,UAAU,CAACE,GAAG,CAAQS,QAAQ,CAAC;EAC7C;;AAtBWb,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAc,SAAtBd,sBAAsB;EAAAe,YAFrB;AAAM","names":["StarWarsServiceService","constructor","httpClient","allFilm","get","baseUrl","getFilmByEpisode","episode","film","films","episode_id","Error","getActor","actorURL","factory","providedIn"],"sourceRoot":"","sources":["D:\\Programmieren\\Schule\\WMC\\wmc_homework\\e16\\src\\app\\star-wars-service.service.ts"],"sourcesContent":["  import { Injectable } from '@angular/core';\r\nimport {Actor, Film} from \"./film\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StarWarsServiceService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  baseUrl: string = \"https://swapi.dev/api/films\";\r\n  films: Film[] = [];\r\n\r\n  allFilm(): Observable<{results: Film[]}> {\r\n    return this.httpClient.get<{results: Film[]}>(this.baseUrl);\r\n  }\r\n\r\n  getFilmByEpisode(episode: number): Film {\r\n    for (let film of this.films) {\r\n      if(film.episode_id === episode) return film;\r\n    }\r\n\r\n    throw new Error();\r\n  }\r\n\r\n  actors: Actor[] = [];\r\n  getActor(actorURL: string): Observable<Actor> {\r\n    return this.httpClient.get<Actor>(actorURL);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}